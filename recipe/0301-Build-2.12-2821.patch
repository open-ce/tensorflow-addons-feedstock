From 78333d970d5bf5a275df9a5a3ecc6f210dd3bc5b Mon Sep 17 00:00:00 2001
From: Nishidha Panpaliya <npanpa23in.ibm.com>
Date: Thu, 1 Jun 2023 16:29:57 +0000
Subject: [PATCH] Build with TF 2.12

---
 WORKSPACE                                     | 19 +++----------------
 configure.py                                  |  4 ++--
 setup.py                                      |  2 +-
 .../seq2seq/tests/beam_search_ops_test.py     | 19 +++----------------
 tensorflow_addons/utils/resource_loader.py    |  4 ++--
 tensorflow_addons/version.py                  |  4 ++--
 tools/install_deps/doc_requirements.txt       |  4 ++--
 tools/install_deps/tensorflow-cpu.txt         |  2 +-
 tools/install_deps/tensorflow.txt             |  2 +-
 tools/install_so_files.sh                     |  2 +-
 tools/run_gpu_tests.sh                        |  4 ++--
 11 files changed, 20 insertions(+), 46 deletions(-)

diff --git a/WORKSPACE b/WORKSPACE
index 03def49..2f44047 100644
--- a/WORKSPACE
+++ b/WORKSPACE
@@ -2,29 +2,16 @@ load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
 load("//build_deps/tf_dependency:tf_configure.bzl", "tf_configure")
 load("//build_deps/toolchains/gpu:cuda_configure.bzl", "cuda_configure")
 
-http_archive(
-    name = "cub_archive",
-    build_file = "//build_deps/toolchains/gpu:cub.BUILD",
-    sha256 = "6bfa06ab52a650ae7ee6963143a0bbc667d6504822cbd9670369b598f18c58c3",
-    strip_prefix = "cub-1.8.0",
-    urls = [
-        "https://storage.googleapis.com/mirror.tensorflow.org/github.com/NVlabs/cub/archive/1.8.0.zip",
-        "https://github.com/NVlabs/cub/archive/1.8.0.zip",
-    ],
-)
-
 tf_configure(
     name = "local_config_tf",
 )
 
-cuda_configure(name = "local_config_cuda")
-
 http_archive(
     name = "org_tensorflow",
-    sha256 = "99c732b92b1b37fc243a559e02f9aef5671771e272758aa4aec7f34dc92dac48",
-    strip_prefix = "tensorflow-2.11.0",
+    sha256 = "c030cb1905bff1d2446615992aad8d8d85cbe90c4fb625cee458c63bf466bc8e",
+    strip_prefix = "tensorflow-2.12.0",
     urls = [
-        "https://github.com/tensorflow/tensorflow/archive/refs/tags/v2.11.0.tar.gz",
+        "https://github.com/tensorflow/tensorflow/archive/refs/tags/v2.12.0.tar.gz",
     ],
 )
 
diff --git a/configure.py b/configure.py
index bae05e8..8f1075b 100644
--- a/configure.py
+++ b/configure.py
@@ -184,14 +184,14 @@ def configure_cuda():
         "CUDNN_INSTALL_PATH",
         os.getenv("CUDNN_INSTALL_PATH", "/usr/lib/x86_64-linux-gnu"),
     )
-    write_action_env("TF_CUDA_VERSION", os.getenv("TF_CUDA_VERSION", "11.2"))
+    write_action_env("TF_CUDA_VERSION", os.getenv("TF_CUDA_VERSION", "11.8"))
     write_action_env("TF_CUDNN_VERSION", os.getenv("TF_CUDNN_VERSION", "8"))
 
     write("test --config=cuda")
     write("build --config=cuda")
     write("build:cuda --define=using_cuda=true --define=using_cuda_nvcc=true")
     write(
-        "build:cuda --crosstool_top=@ubuntu20.04-gcc9_manylinux2014-cuda11.2-cudnn8.1-tensorrt7.2_config_cuda//crosstool:toolchain"
+        "build:cuda --crosstool_top=@ubuntu20.04-gcc9_manylinux2014-cuda11.8-cudnn8.6-tensorrt8.4_config_cuda//crosstool:toolchain"
     )
 
 
diff --git a/setup.py b/setup.py
index 269165b..d3aac99 100644
--- a/setup.py
+++ b/setup.py
@@ -115,10 +115,10 @@ setup(
         "Intended Audience :: Science/Research",
         "License :: OSI Approved :: Apache Software License",
         "Programming Language :: Python :: 3",
-        "Programming Language :: Python :: 3.7",
         "Programming Language :: Python :: 3.8",
         "Programming Language :: Python :: 3.9",
         "Programming Language :: Python :: 3.10",
+        "Programming Language :: Python :: 3.11",
         "Topic :: Scientific/Engineering :: Mathematics",
         "Topic :: Software Development :: Libraries :: Python Modules",
         "Topic :: Software Development :: Libraries",
diff --git a/tensorflow_addons/seq2seq/tests/beam_search_ops_test.py b/tensorflow_addons/seq2seq/tests/beam_search_ops_test.py
index 591cc53..ad22244 100644
--- a/tensorflow_addons/seq2seq/tests/beam_search_ops_test.py
+++ b/tensorflow_addons/seq2seq/tests/beam_search_ops_test.py
@@ -20,7 +20,6 @@ import numpy as np
 import pytest
 import tensorflow as tf
 
-from tensorflow_addons import options
 from tensorflow_addons.seq2seq import gather_tree
 
 
@@ -80,26 +79,14 @@ def test_bad_parent_values_on_gpu():
         [[[0, 0, 0], [0, -1, 1], [2, 1, 2], [-1, -1, -1]]]
     )
     max_sequence_lengths = [3]
-    expected_result = _transpose_batch_time(
-        [[[2, -1, 2], [6, 5, 6], [7, 8, 9], [10, 10, 10]]]
-    )
-    if options.is_custom_kernel_disabled():
-        # The Python version has the same behavior on CPU and GPU.
-        with pytest.raises(tf.errors.InvalidArgumentError, match="parent id"):
-            _ = gather_tree(
-                step_ids=step_ids,
-                parent_ids=parent_ids,
-                max_sequence_lengths=max_sequence_lengths,
-                end_token=end_token,
-            )
-    else:
-        beams = gather_tree(
+
+    with pytest.raises(tf.errors.InvalidArgumentError, match="parent id"):
+        _ = gather_tree(
             step_ids=step_ids,
             parent_ids=parent_ids,
             max_sequence_lengths=max_sequence_lengths,
             end_token=end_token,
         )
-        np.testing.assert_equal(expected_result, beams.numpy())
 
 
 @pytest.mark.usefixtures("run_custom_and_py_ops")
diff --git a/tensorflow_addons/utils/resource_loader.py b/tensorflow_addons/utils/resource_loader.py
index 1f8718d..a55fad2 100644
--- a/tensorflow_addons/utils/resource_loader.py
+++ b/tensorflow_addons/utils/resource_loader.py
@@ -20,8 +20,8 @@ import warnings
 
 import tensorflow as tf
 
-INCLUSIVE_MIN_TF_VERSION_FOR_ABI_COMPATIBILITY = "2.11.0"
-EXCLUSIVE_MAX_TF_VERSION_FOR_ABI_COMPATIBILITY = "2.12.0"
+INCLUSIVE_MIN_TF_VERSION_FOR_ABI_COMPATIBILITY = "2.12.0"
+EXCLUSIVE_MAX_TF_VERSION_FOR_ABI_COMPATIBILITY = "2.13.0"
 abi_warning_already_raised = False
 SKIP_CUSTOM_OPS = False
 
diff --git a/tensorflow_addons/version.py b/tensorflow_addons/version.py
index ad42754..e681690 100644
--- a/tensorflow_addons/version.py
+++ b/tensorflow_addons/version.py
@@ -15,8 +15,8 @@
 """Define TensorFlow Addons version information."""
 
 # Required TensorFlow version [min, max)
-INCLUSIVE_MIN_TF_VERSION = "2.9.0"
-EXCLUSIVE_MAX_TF_VERSION = "2.12.0"
+INCLUSIVE_MIN_TF_VERSION = "2.10.0"
+EXCLUSIVE_MAX_TF_VERSION = "2.13.0"
 
 # We follow Semantic Versioning (https://semver.org/)
 _MAJOR_VERSION = "0"
diff --git a/tools/install_deps/doc_requirements.txt b/tools/install_deps/doc_requirements.txt
index 7a7a9ed..0bb0a8c 100644
--- a/tools/install_deps/doc_requirements.txt
+++ b/tools/install_deps/doc_requirements.txt
@@ -1,2 +1,2 @@
-git+https://github.com/tensorflow/docs
-pyyaml
\ No newline at end of file
+git+https://github.com/tensorflow/docs@99113f26039f6c042df7f2898e05019dbcdf3675
+pyyaml
diff --git a/tools/install_deps/tensorflow-cpu.txt b/tools/install_deps/tensorflow-cpu.txt
index a56d24a..bdafb6b 100644
--- a/tools/install_deps/tensorflow-cpu.txt
+++ b/tools/install_deps/tensorflow-cpu.txt
@@ -1 +1 @@
-tensorflow-cpu~=2.11.0
+tensorflow-cpu~=2.12.0
diff --git a/tools/install_deps/tensorflow.txt b/tools/install_deps/tensorflow.txt
index 1f4b31a..d642a8a 100644
--- a/tools/install_deps/tensorflow.txt
+++ b/tools/install_deps/tensorflow.txt
@@ -1 +1 @@
-tensorflow~=2.11.0
\ No newline at end of file
+tensorflow~=2.12.0
\ No newline at end of file
diff --git a/tools/install_so_files.sh b/tools/install_so_files.sh
index f0d30d8..4cd6f2f 100644
--- a/tools/install_so_files.sh
+++ b/tools/install_so_files.sh
@@ -1,7 +1,7 @@
 set -e -x
 
 if [ "$TF_NEED_CUDA" == "1" ]; then
-  CUDA_FLAG="--crosstool_top=@ubuntu20.04-gcc9_manylinux2014-cuda11.2-cudnn8.1-tensorrt7.2_config_cuda//crosstool:toolchain"
+  CUDA_FLAG="--crosstool_top=@ubuntu20.04-gcc9_manylinux2014-cuda11.8-cudnn8.6-tensorrt8.4_config_cuda//crosstool:toolchain"
 fi
 
 bazel build $CUDA_FLAG //tensorflow_addons/...
diff --git a/tools/run_gpu_tests.sh b/tools/run_gpu_tests.sh
index ed187fc..f25c558 100644
--- a/tools/run_gpu_tests.sh
+++ b/tools/run_gpu_tests.sh
@@ -6,7 +6,7 @@ export DOCKER_BUILDKIT=1
 docker build \
        -f tools/docker/build_wheel.Dockerfile \
        --target tfa_gpu_tests \
-       --build-arg TF_VERSION=2.11.0 \
-       --build-arg PY_VERSION=3.7 \
+       --build-arg TF_VERSION=2.12.0 \
+       --build-arg PY_VERSION=3.9 \
        -t tfa_gpu_tests ./
 docker run --rm -t --gpus=all tfa_gpu_tests
-- 
2.34.1

