From 34852704058c87121d79982862ef83bf165accc0 Mon Sep 17 00:00:00 2001
From: Nishidha Panpaliya <npanpa23@in.ibm.com>
Date: Thu, 20 Oct 2022 06:45:42 +0000
Subject: [PATCH] Fixed build in conda environment

---
 build_deps/toolchains/gpu/crosstool/CROSSTOOL.tpl        | 9 ++++-----
 .../toolchains/gpu/crosstool/cc_toolchain_config.bzl.tpl | 9 ++++-----
 .../clang/bin/crosstool_wrapper_driver_is_not_gcc.tpl    | 2 +-
 configure.py                                             | 8 ++++----
 4 files changed, 13 insertions(+), 15 deletions(-)

diff --git a/build_deps/toolchains/gpu/crosstool/CROSSTOOL.tpl b/build_deps/toolchains/gpu/crosstool/CROSSTOOL.tpl
index 1a13ac8..2128d3c 100644
--- a/build_deps/toolchains/gpu/crosstool/CROSSTOOL.tpl
+++ b/build_deps/toolchains/gpu/crosstool/CROSSTOOL.tpl
@@ -14,11 +14,11 @@ toolchain {
   toolchain_identifier: "local_linux"
 
   feature {
-    name: "c++11"
+    name: "c++17"
     flag_set {
       action: "c++-compile"
       flag_group {
-        flag: "-std=c++11"
+        flag: "-std=c++17"
       }
     }
   }
@@ -192,7 +192,7 @@ toolchain {
   feature {
     name: "common"
     implies: "stdlib"
-    implies: "c++11"
+    implies: "c++17"
     implies: "determinism"
     implies: "alwayslink"
     implies: "hardening"
@@ -443,7 +443,7 @@ toolchain {
   feature {
     name: "common"
     implies: "stdlib"
-    implies: "c++11"
+    implies: "c++17"
     implies: "determinism"
     implies: "hardening"
     implies: "warnings"
@@ -636,7 +636,6 @@ toolchain {
       action: "assemble"
       action: "preprocess-assemble"
       flag_group {
-        flag: "-B"
         flag: "external/local_config_cuda/crosstool/windows/msvc_wrapper_for_nvcc.py"
       }
     }
diff --git a/build_deps/toolchains/gpu/crosstool/cc_toolchain_config.bzl.tpl b/build_deps/toolchains/gpu/crosstool/cc_toolchain_config.bzl.tpl
index ba002b4..a567ea4 100755
--- a/build_deps/toolchains/gpu/crosstool/cc_toolchain_config.bzl.tpl
+++ b/build_deps/toolchains/gpu/crosstool/cc_toolchain_config.bzl.tpl
@@ -898,7 +898,6 @@ def _impl(ctx):
                 flag_groups = [
                     flag_group(
                         flags = [
-                            "-B",
                             "external/local_config_cuda/crosstool/windows/msvc_wrapper_for_nvcc.py",
                         ],
                     ),
@@ -912,7 +911,7 @@ def _impl(ctx):
         flag_sets = [
             flag_set(
                 actions = all_link_actions,
-                flag_groups = [flag_group(flags = ["-B" + ctx.attr.linker_bin_path])],
+                #flag_groups = [flag_group(flags = [ctx.attr.linker_bin_path])],
             ),
         ],
     )
@@ -1249,11 +1248,11 @@ def _impl(ctx):
     )
 
     cpp11_feature = feature(
-        name = "c++11",
+        name = "c++17",
         flag_sets = [
             flag_set(
                 actions = [ACTION_NAMES.cpp_compile],
-                flag_groups = [flag_group(flags = ["-std=c++11"])],
+                flag_groups = [flag_group(flags = ["-std=c++17"])],
             ),
         ],
     )
@@ -1263,7 +1262,7 @@ def _impl(ctx):
             name = "common",
             implies = [
                 "stdlib",
-                "c++11",
+                "c++17",
                 "determinism",
                 "alwayslink",
                 "hardening",
diff --git a/build_deps/toolchains/gpu/crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc.tpl b/build_deps/toolchains/gpu/crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc.tpl
index affc0be..3b5fd82 100644
--- a/build_deps/toolchains/gpu/crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc.tpl
+++ b/build_deps/toolchains/gpu/crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc.tpl
@@ -205,7 +205,7 @@ def InvokeNvcc(argv, log=False):
       x.replace(".", "") for x in supported_cuda_compute_capabilities])
   for capability in supported_cuda_compute_capabilities[:-1]:
     nvccopts += r'-gencode=arch=compute_%s,\"code=sm_%s\" ' % (
-        capability, capability, capability)
+        capability, capability)
   if supported_cuda_compute_capabilities:
     capability = supported_cuda_compute_capabilities[-1]
     nvccopts += r'-gencode=arch=compute_%s,code=\"sm_%s,compute_%s\" ' % (
diff --git a/configure.py b/configure.py
index bae05e8..40db7cd 100644
--- a/configure.py
+++ b/configure.py
@@ -190,10 +190,10 @@ def configure_cuda():
     write("test --config=cuda")
     write("build --config=cuda")
     write("build:cuda --define=using_cuda=true --define=using_cuda_nvcc=true")
-    write(
-        "build:cuda --crosstool_top=@ubuntu20.04-gcc9_manylinux2014-cuda11.2-cudnn8.1-tensorrt7.2_config_cuda//crosstool:toolchain"
-    )
-
+    #write(
+    #    "build:cuda --crosstool_top=@ubuntu20.04-gcc9_manylinux2014-cuda11.2-cudnn8.1-tensorrt7.2_config_cuda//crosstool:toolchain"
+    #)
+    write("build:cuda --crosstool_top=@local_config_cuda//crosstool:toolchain")
 
 if __name__ == "__main__":
     create_build_configuration()
-- 
2.34.1

